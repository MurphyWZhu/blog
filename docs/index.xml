<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>锦酱的博客</title>
    <link>https://murphywzhu.github.io/blog/</link>
    <description>Recent content on 锦酱的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 21 Apr 2021 21:45:28 +0800</lastBuildDate><atom:link href="https://murphywzhu.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust所有权</title>
      <link>https://murphywzhu.github.io/blog/posts/rust-02/</link>
      <pubDate>Wed, 21 Apr 2021 21:45:28 +0800</pubDate>
      
      <guid>https://murphywzhu.github.io/blog/posts/rust-02/</guid>
      <description>所有权 所有权是rust的核心之一
它有如下规则
1、Rust 中的每一个值都有一个被称为其 所有者（owner）的变量。 2、值在任一时刻有且只有一个所有者。 3、当所有者（变量）离开作用域，这个值将被丢弃。 变量作用域 #![allow(unused)] fn main() { { // s 在这里无效, 它尚未声明  let s = &amp;#34;hello&amp;#34;; // 从此处起，s 是有效的  // 使用 s } // 此作用域已结束，s 不再有效 } String类型 之前的类型都是栈上的，现在需要一个堆上的类型，String就是我们需要的类型
let s = String::from(&amp;#34;hello&amp;#34;); 对于栈上的数据rust直接复制了
let x = 5; let y = x; 对于堆上的数据，rust将原来的内存给了之后的，而原来的就无效了
如下代码会错误，因为s1无效了，所以发生了无效引用
let s1 = String::from(&amp;#34;hello&amp;#34;); let s2 = s1; println!(&amp;#34;{}, world!&amp;#34;, s1); 如果要复制String的数据可以使用clone
let s1 = String::from(&amp;#34;hello&amp;#34;); let s2 = s1.</description>
    </item>
    
    <item>
      <title>Rust常见编程概念</title>
      <link>https://murphywzhu.github.io/blog/posts/rust-01/</link>
      <pubDate>Wed, 21 Apr 2021 14:55:05 +0800</pubDate>
      
      <guid>https://murphywzhu.github.io/blog/posts/rust-01/</guid>
      <description>不变变量 以下程序理所当然的输出5
fn main() { let a = 5; println!(&amp;#34;{}&amp;#34;, a); } 而当你尝试改变a的值时
fn main() { let a = 5; a = 6; println!(&amp;#34;{}&amp;#34;, a); } 则会出现错误
error[E0384]: cannot assign twice to immutable variable `a` --&amp;gt; src/main.rs:3:5 | 2 | let a = 5; | - | | | first assignment to `a` | help: make this binding mutable: `mut a` 3 | a = 6; | ^^^^^ cannot assign twice to immutable variable rust会很人性化的提示你哪里错了，还会给出建议</description>
    </item>
    
    <item>
      <title>Rust初试</title>
      <link>https://murphywzhu.github.io/blog/posts/rust/</link>
      <pubDate>Wed, 21 Apr 2021 13:58:22 +0800</pubDate>
      
      <guid>https://murphywzhu.github.io/blog/posts/rust/</guid>
      <description>Rust 据官网说介绍rust是一门高性能，高可靠的编程语言，最主要的特点就是安全可靠，据悉Linux内核都在考虑是否用rust代替C
Rust安装 可以使用官方的rustup来安装rust以及其他工具
sudo pacman -S rustup 设置rustup的下载源
export RUSTUP_DIST_SERVER=https://mirrors.tuna.tsinghua.edu.cn/rustup 安装rust
rustup install stable rustup component add rust-src Helloworld
Code % cargo new hello-world Created binary (application) `hello-world` package Code % cd hello-world hello-world[master*] % ls Cargo.toml src hello-world[master*] % cargo run Compiling hello-world v0.1.0 (/home/murphy/Code/hello-world) Finished dev [unoptimized + debuginfo] target(s) in 1.15s Running `target/debug/hello-world` Hello, world! Rust IDE rust还没有官方的IDE，我使用Clion的rust插件来写</description>
    </item>
    
    <item>
      <title>Arch Install</title>
      <link>https://murphywzhu.github.io/blog/posts/arch-install/</link>
      <pubDate>Wed, 21 Apr 2021 12:49:02 +0800</pubDate>
      
      <guid>https://murphywzhu.github.io/blog/posts/arch-install/</guid>
      <description>安装前配置 设置字体
setfont /usr/share/kbd/consolefonts/iso01-12x22.psfu.gz 连接网络
wifi: iwctl 设置ntp
timedatectl set-ntp true 磁盘按照自己的需要分区
将根目录挂载到/mnt
修改镜像站</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://murphywzhu.github.io/blog/posts/hello-world/</link>
      <pubDate>Wed, 21 Apr 2021 11:05:00 +0800</pubDate>
      
      <guid>https://murphywzhu.github.io/blog/posts/hello-world/</guid>
      <description>这是第一篇文章
echo &amp;quot;Hello World!&amp;quot; </description>
    </item>
    
    
  </channel>
</rss>
